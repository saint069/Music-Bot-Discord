import nextcord
from nextcord.ext import commands
from nextcord.shard import EventItem
import wavelinkcord as wavelink

bot_version = "0.0.1"

intents = nextcord.Intents.all()
client = nextcord.Client()
bot = commands.Bot(command_prefix="Your prefix", intents=intents)

@bot.event
async def on_ready():
    print("Bot Ready!")
    bot.loop.create_task(on_node())

async def on_node():

    node: wavelink.Node = wavelink.Node(uri="your lavalink", password="youshallnotpass")
    await wavelink.NodePool.connect(client=bot, nodes=[node])
    wavelink.Player.autoplay = True

@bot.slash_command(guild_ids=[1176214717866455050])
async def play(interaction : nextcord.Interaction, search : str):

    query = await wavelink.YouTubeTrack.search(search, return_first=True)
    destination = interaction.user.voice.channel

    if not interaction.guild.voice.client:

        vc: wavelink.Player = await destination.connect(cls=wavelink.Player)
    else:

        vc: wavelink.Player = interaction.guild.voice_client

    if vc.queue.is_empty and not vc.is_playing():

        await vc.play(query)
        await interaction.response.send_message(f"Tocando Agora: {vc.current.title}")
    else:
        await vc.queue.put_wait(query)
        await interaction.response.send_message(f"Musica adicionada a playlist!")

@bot.slash_command(guild_ids=[1176214717866455050])
async def skip(interaction : nextcord.Interaction):

    vc: wavelink.Player = interaction.guild.voice_client
    await vc.stop()
    await interaction.response.send_message(f"A musica foi pulada!")

@bot.slash_command(guild_ids=[1176214717866455050])
async def pause(interaction : nextcord.Interaction):

    vc: wavelink.Player = interaction.guild.voice_client

    if vc.is_playing():

        await vc.pause()
        await interaction.response.send_message(f"A musica foi pausada!")
    else:
        await interaction.response.send_message(f"A musica esta pausada!")

@bot.slash_command(guild_ids=[1176214717866455050])
async def resume(interaction : nextcord.Interaction):

    vc: wavelink.Player = interaction.guild.voice_client

    if vc.is_playing():

        await interaction.response.send_message(f"A musica esta despausada!")
    else:
        await interaction.response.send_message(f"A musica foi despausada")
        await vc.resume()

@bot.slash_command(guild_ids=[1176214717866455050])
async def disconnect(interaction : nextcord.Interaction):

    vc: wavelink.Player = interaction.guild.voice_client
    await vc.disconnect()
    await interaction.response.send_message(f"O bot foi desconectado!")

@bot.slash_command(guild_ids=[1176214717866455050])
async def queue(interaction : nextcord.Interaction):

    vc: wavelink.Player = interaction.guild.voice_client

    if not vc.queue.is_empty:

        song_counter = 0
        songs = []
        queue = vc.queue.copy()
        embed = nextcord.Embed(title="Fila")

        for song in queue:

            song_counter += 1
            songs.append(song)
            embed.add_field(name=f"[{song_counter}] Duração {song.duration}", value=f"{song.title}", inline=False)

        await interaction.response.send_message(embed=embed)
    else:
        await interaction.response.send_message("A lista está vazia!")

bot.run("Put your token here")
